{"version":3,"sources":["images/logo2.png","utilities.js","App.js","index.js"],"names":["kelvinToCelsius","kelvin","Math","round","kelvinToFahrenheit","timeConverter","unix_timestamp","date","Date","getHours","getMinutes","substr","windDegreeToText","degree","App","useState","city","setCity","cityInput","setCityInput","celsius","setCelsius","cities","setCities","matchCities","setMatchCities","inputRef","useRef","getCities","a","fetch","response","json","data","loadCities","newCities","getWeatherInfo","cityName","status","Error","loadWeather","newCity","handleChange","e","matchArray","wordToMatch","filter","place","regex","RegExp","match","findMatches","current","value","target","useEffect","className","src","logo","alt","onSubmit","preventDefault","changeCity","name","placeholder","type","defaultValue","onChange","onKeyUp","ref","id","onClick","weather","main","temp","temp_max","temp_min","length","map","index","sys","sunrise","sunset","humidity","wind","deg","speed","feels_like","pressure","visibility","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.217feec3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo2.4595304d.png\";","export const kelvinToCelsius = (kelvin) => {\n  return `${Math.round(kelvin - 273.15)}째`;\n};\n\nexport const kelvinToFahrenheit = (kelvin) => {\n  return `${Math.round((kelvin - 273.15) * (9 / 5) + 32)}째`;\n};\n\nexport const timeConverter = (unix_timestamp) => {\n  let date = new Date(unix_timestamp * 1000);\n  let hours = date.getHours();\n  let minutes = \"0\" + date.getMinutes();\n  let formattedTime = hours + \":\" + minutes.substr(-2);\n  return formattedTime;\n};\n\nexport const windDegreeToText = (degree) => {\n  switch (true) {\n    case degree < 22.5:\n      return \"n\";\n    case degree < 45:\n      return \"nne\";\n    case degree < 67.5:\n      return \"ne\";\n    case degree < 90:\n      return \"ene\";\n    case degree < 112.5:\n      return \"e\";\n    case degree < 135:\n      return \"ese\";\n    case degree < 157.5:\n      return \"se\";\n    case degree < 180:\n      return \"sse\";\n    case degree < 202.5:\n      return \"s\";\n    case degree < 225:\n      return \"ssw\";\n    case degree < 247.5:\n      return \"sw\";\n    case degree < 270:\n      return \"wsw\";\n    case degree < 292.5:\n      return \"w\";\n    case degree < 315:\n      return \"wnw\";\n    case degree < 337.5:\n      return \"nnw\";\n    default:\n      return \"nw\";\n  }\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./style/style.css\";\nimport \"./style/reset.css\";\nimport logo from \"./images/logo2.png\";\nimport { kelvinToCelsius } from \"./utilities\";\nimport { kelvinToFahrenheit } from \"./utilities\";\nimport { timeConverter } from \"./utilities\";\nimport { windDegreeToText } from \"./utilities\";\n\nfunction App() {\n  const [city, setCity] = useState();\n  const [cityInput, setCityInput] = useState(\"\");\n  const [celsius, setCelsius] = useState(true);\n  const [cities, setCities] = useState([]);\n  const [matchCities, setMatchCities] = useState([]);\n\n  const inputRef = useRef();\n\n  async function getCities() {\n    const endpoint =\n      \"https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json\";\n\n    const response = await fetch(endpoint);\n    const data = await response.json();\n    return data;\n  }\n\n  const loadCities = async () => {\n    const newCities = await getCities();\n    setCities(newCities);\n  };\n\n  function findMatches(wordToMatch, cities) {\n    return cities.filter((place) => {\n      // here we need to figure out if the city matches what was searched\n      const regex = new RegExp(wordToMatch, \"gi\");\n      return place.city.match(regex);\n    });\n  }\n\n  async function getWeatherInfo(cityName) {\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&APPID=15f348269fa615760b2f05b9dc5a97d8`\n    );\n    if (response.status === 404) {\n      throw new Error(\"Not found\");\n    }\n    const data = await response.json();\n    return data;\n  }\n\n  const loadWeather = async (cityName) => {\n    try {\n      const newCity = await getWeatherInfo(cityName);\n      setCity(newCity);\n    } catch (e) {}\n  };\n\n  const handleChange = (e) => {\n    const matchArray = findMatches(inputRef.current.value, cities);\n    if (inputRef.current.value === \"\") {\n      setMatchCities([]);\n    } else {\n      setMatchCities(matchArray);\n    }\n    setCityInput(e.target.value);\n  };\n\n  const changeCity = (e) => {\n    e.preventDefault();\n    loadWeather(cityInput);\n    inputRef.current.value = \"\";\n    setMatchCities([]);\n  };\n\n  const changeUnit = () => {\n    setCelsius(!celsius);\n  };\n\n  useEffect(() => {\n    loadWeather(\"London\");\n  }, []);\n\n  useEffect(() => {\n    loadCities();\n  }, []);\n\n  if (!city) return null;\n\n  return (\n    <div className=\"wrapper\">\n      <header className=\"header\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        <form\n          className=\"city-input\"\n          onSubmit={(e) => {\n            changeCity(e);\n          }}\n        >\n          <input\n            name=\"position\"\n            placeholder=\"Enter a City\"\n            type=\"text\"\n            defaultValue=\"\"\n            onChange={handleChange}\n            onKeyUp={handleChange}\n            ref={inputRef}\n          />\n          <button type=\"submit\"> Search </button>\n        </form>\n        <button\n          id=\"celsius-button\"\n          onClick={() => {\n            changeUnit();\n          }}\n        >\n          째C / 째F\n        </button>\n      </header>\n      <section className=\"main-info\">\n        <h1 className=\"city-title\">{city.name}</h1>\n        <h2>{city.weather[0].main} </h2>\n        <h3>\n          {celsius\n            ? kelvinToCelsius(city.main.temp)\n            : kelvinToFahrenheit(city.main.temp)}{\" \"}\n        </h3>\n        <div>\n          <h4>\n            H:\n            {celsius\n              ? kelvinToCelsius(city.main.temp_max)\n              : kelvinToFahrenheit(city.main.temp_max)}\n          </h4>\n          <h4>\n            L:\n            {celsius\n              ? kelvinToCelsius(city.main.temp_min)\n              : kelvinToFahrenheit(city.main.temp_min)}\n          </h4>\n        </div>\n        <div className=\"suggestion-wrapper\">\n          <h1>\n            {matchCities.length > 0 &&\n              \"Cities that match your search in the US\"}\n          </h1>\n          <ul className=\"suggestions\">\n            {matchCities.length > 0 &&\n              matchCities?.map((place, index) => {\n                if (index < 6) {\n                  return <li key={index}>{place.city}</li>;\n                }\n              })}\n          </ul>\n        </div>\n      </section>\n      <section className=\"info-section\">\n        <ul>\n          <div>\n            <h3>SUNRISE</h3>\n            <li>{timeConverter(city.sys.sunrise)}</li>\n          </div>\n          <div>\n            <h3>SUNSET</h3>\n            <li>{timeConverter(city.sys.sunset)}</li>\n          </div>\n          <div>\n            <h3>HUMIDITY</h3>\n            <li>{city.main.humidity}%</li>\n          </div>\n          <div>\n            <h3>WIND</h3>\n            <li>\n              {windDegreeToText(city.wind.deg)}{\" \"}\n              {Math.round(city.wind.speed * 3.6)} km/h\n            </li>\n          </div>\n          <div>\n            <h3>FEELS LIKE</h3>\n            <li>\n              {celsius\n                ? kelvinToCelsius(city.main.feels_like)\n                : kelvinToFahrenheit(city.main.feels_like)}\n            </li>\n          </div>\n          <div>\n            <h3>PRESSURE</h3>\n            <li>{city.main.pressure} hPa</li>\n          </div>\n          <div>\n            <h3>VISIBILITY</h3>\n            <li>{Math.round(city.visibility / 1000)} km</li>\n          </div>\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}